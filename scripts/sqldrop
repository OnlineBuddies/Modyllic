#!/usr/bin/env php
<?php
/**
 * Copyright Â© 2011 Online Buddies, Inc. - All Rights Reserved
 *
 * @package Modyllic
 * @author bturner@online-buddies.com
 */

require_once "Modyllic/CommandLine.php";
require_once "Modyllic/Generator.php";
require_once "Modyllic/Generator/SQL.php";

$args = Modyllic_CommandLine::getArgs(array(
    'description' => 'Display drop statements for a schema',
    'options' => array(
        'dialect' => array(
            'short_name'  => '-d',
            'long_name'   => '--dialect',
            'description' => 'dialect to output in',
            'action'      => 'Dialect',
            'default'     => 'Modyllic_Generator_NativeSQL',
            ),
        'only' => array(
            'long_name'   => '--only',
            'description' => 'comma separated list of kinds of schema objects to process: database, sqlmeta, tables, views, routines, events, triggers',
            'action'      => 'StoreString',
            ) ),
    'arguments' => array(
        'spec' => array('multiple'=>true) )));

$schema = Modyllic_CommandLine::schema($args->args['spec']);

$class = Modyllic_Generator::dialectToClass( $args->options['dialect'] );
$gen = new $class();

if ( isset($args->options['only']) ) {
    try {
        $only = preg_split('/\s*,\s*/',$args->options['only']);
        $gen->validate_schema_types($only);
    }
    catch (Exception $e) {
        Modyllic_CommandLine::displayError($e->getMessage());
    }
}
else {
    $only = $gen->schema_types();
}

print $gen->drop_sql( $schema, ';;', true, $only );
