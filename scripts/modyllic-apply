#!/usr/bin/env php
<?php
/**
 * Copyright Â© 2012 Online Buddies, Inc. - All Rights Reserved
 *
 * @package Modyllic
 * @author bturner@online-buddies.com
 * @author astewart@online-buddies.com
 */

if ($lib_path = getenv("MODYLLIC_LIB_PATH")) set_include_path($lib_path.":".get_include_path());

require_once "Modyllic/CommandLine.php";

$args = Modyllic_CommandLine::get_args(array(
    'description' => 'Apply an SQL file to a database',
    'options' => array(
        'dsn' => array(
            'short_name'  => '-d',
            'long_name'   => '--dsn',
            'action'      => 'StoreString',
            'description' => 'The DSN of the database to update',
        ),
        'script' => array(
            'short_name'  => '-s',
            'long_name'   => '--script',
            'action'      => 'StoreString',
            'description' => 'The SQL to apply to the database',
        ),
        'skip' => array(
            'short_name'  => '-k',
            'long_name'   => '--skip',
            'action'      => 'StoreString',
            'default'     => 0,
            'description' => 'The step number to continue after',
        ),
    ),
    'arguments' => array(
        'dsn' => array('optional'=>true),
        'script' => array('optional'=>true),
    ),
));


if ( ( isset( $args->args['dsn'] ) and isset( $args->options['dsn'] ) ) or
     ( isset( $args->args['dsn'] ) and isset( $args->options['script'] ) ) ) {
    Modyllic_CommandLine::display_error( "You can't specify a database and/or script both positionally and via options" );
}

$dsntoapply = isset($args->options['dsn']) ? $args->options['dsn'] : $args->args['dsn'];
$filename = isset($args->options['script']) ? $args->options['script'] : $args->args['script'];
$skip = isset($args->options['skip']) ? (int)$args->options['skip'] : 0;

if ( ! isset($dsntoapply) ) {
    Modyllic_CommandLine::display_error( 'You must specify both a database to connect to and a script to apply' );
}

if ( ! isset($filename) ) {
    Modyllic_CommandLine::display_error( 'the script to apply is required');
}

if ( ! Modyllic_Loader_DB::is_dsn($dsntoapply) ) {
    Modyllic_CommandLine::display_error( 'the DSN must be a database');
}

list( $driver, $dsn, $dbname, $user, $pass ) = Modyllic_Loader_DB::parse_dsn( $dsntoapply );

try {
    $gen_class = Modyllic_Generator::dialect_to_class($driver);
}
catch (Exception $e) {
    Modyllic_Commandline::display_error( 'Could not find a compatible dialect for '.$driver );
}
try {
    $dbh = new PDO( $dsn, $user, $pass, array( PDO::ATTR_ERRMODE=>PDO::ERRMODE_EXCEPTION ) );
    $dbh->exec("USE $dbname");
}
catch (PDOException $e) {
    Modyllic_Commandline::display_error( 'error connecting to database server: '.$e->getMessage() );
}

try {
    $sql = file_get_contents($filename);
    $tok = new Modyllic_Tokenizer($sql);
    $tok->set_delimiter( ';' );
    $cmd = "";
    while ( !$tok->next(true) instanceOf Modyllic_Token_EOF ) {
        if ( $tok->cur instanceOf Modyllic_Token_Delim ) {
            apply_cmd($dbh, $cmd, $dsntoapply, $filename, $skip);
            $cmd = "";
        }
        else {
            $cmd .= $tok->cur->literal();
        }
    }

    apply_cmd($dbh, $cmd, $dsntoapply, $filename);
}
catch (Exception $e) {
    Modyllic_CommandLine::display_error( "$e" );
}

function apply_cmd($dbh,$cmd,$dsntoapply,$filename,$skip=null) {
    static $stmt = 0;
    $cmd = trim($cmd);
    if ( $cmd != "" and (is_null($skip) or (++$stmt > $skip)) ) {
        echo sprintf("%4s ----------------------------------------------\n", "#$stmt");
        echo "$cmd\n";
        try {
            $sth = $dbh->prepare($cmd);
            $sth->execute();
        }
        catch (Exception $e) {
            echo "== ERROR ==========================================\n";
            echo $e->getMessage()."\n";
            echo "---------------------------------------------------\n";
            if ( is_null($skip) ) {
                echo "This was the last statement in the file.\n";
            }
            else {
                echo "To continue from after this statement, run:\n";
                echo "modyllic apply -d $dsntoapply -s $filename -k $stmt\n";
            }
            exit(1);
        }
    }
}
